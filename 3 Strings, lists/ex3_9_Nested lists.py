# 3.9 Вложенные списки, многомерные списки
import ast

line = [1, 7, 6, 11, 3]

# Создание списка перечислением
print("\n", "Создание списков перечислением ", sep='')
img = [[1, 7, 6, 11, 3], [1, 7, 6, 11, 3], [1, 7, 6, 11, 3], [1, 7, 6, 11, 3], [1, 7, 6, 11, 3]]
print(img)

img = [line[:], line[:], line[:], line[:], line[:]]
print(img)
print(img[0])
print(img[0][1])

img[1] = [0, 0, 0, 0, 0]
print(img)

img[1] = [0] * 5
print(img)

img[1][:] = [1] * 5
print(img)

# Создание списка умножением
print("\n", "Создание списков умножением ", sep='')
img2 = [line[:]] * 5
print(img2)

# Неравномерные списки
print("\n", "Неравномерные списки ", sep='')
t = [["Люблю", "тебя", "Петра", "творенье"],
     ["Люблю", "твой", "строгий", "стройный", "вид"],
     ["Невы", "державное", "теченье"],
     ["Береговой", "ее", "гранит"]
     ]
print(t)
print(t[0][2])
t[0][2] = "Питон"
print(t[0])

t.append("Твоих оград узор чугунный".split())
print(t)

del t[1]
print(t)

# Многомерные списки
print("\n", "Многомерные списки", sep='')
A = [[[True, False], [1, 2, 3]], ["матрица", "вектор"]]
print(A)
print(A[0])
print(A[1])
print(A[0][1][0])

# Задачи
print("\n", "Tasks", sep='')

# Подвиг 1. В список:
# # a = [5.4, 6.7, 10.4]
# # добавить в конец вложенный список со значениями,
# вводимыми в программу (целые числа вводятся в строчку через пробел).
# Результирующий список lst вывести на экран командой:
# # print(lst)
# # Variant 1
# a = [5.4, 6.7, 10.4]
# lst = a[:] + [list(map(int, input().split()))]
# print(lst)
# # Variant 2
# a = [5.4, 6.7, 10.4]
# lst = list(map(int, input().split()))
# a.append(lst)
# print(a)

# Task 2
# Подвиг 2. Вводятся три строчки стихотворения (каждая с новой строки).
# Сохранить его в виде вложенного списка с разбивкой по строкам и словам (слова разделяются пробелом).
# Результирующий список lst вывести на экран командой:
# # print(lst)
# # Sample Input:
# # Мороз и солнце день чудесный
# Еще ты дремлешь друг прелестный
# Пора красавица проснись
# lst = [input().split(), input().split(), input().split()]
# print(lst)

# Task 3
# Подвиг 3. Вводится  матрица чисел из трех строк. В каждой строке числа разделяются пробелом.
# Необходимо вывести на экран последний столбец этой матрицы в виде строки из трех чисел через пробел.
# # Sample Input:
# 8 11 12 1
# 9 4 36 -4
# 1 12 49 5
# lst = [input().split(), input().split(), input().split()]
# print(lst[0][3], lst[1][3], lst[2][3])

# Task 6
# # Variant 1
# t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
#      ["Я", "Python", "выучил", "с", "каналом"],
#      ["Балакирев", "что", "раздавал?"]]
# a = input()
# print(a in t[0] or a in t[1] or a in t[2])
# # Variant 2
# t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
#      ["Я", "Python", "выучил", "с", "каналом"],
#      ["Балакирев", "что", "раздавал?"]]
# print(input() in sum(t, [])) # ищем вхождение в списке, преобразовав список списков (t) в один
# # Variant 3 - best
# t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
#      ["Я", "Python", "выучил", "с", "каналом"],
#      ["Балакирев", "что", "раздавал?"]]
# a = input()
# print(a in str(t))

# Variant 4 - test lab
t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
     ["Я", "Python", "выучил", "с", "каналом"],
     ["Балакирев", "что", "раздавал?"]]
print(t)
a = 'дядя'
print('\n', 'str(list)')
# запись списка в строку
ts = str(t)
print(a in ts)
print(ts)
print(ts[0])
print('\n', 'ast.literal_eval(list)')
# интерпретация строки для создания списка, безопасно
t1 = ast.literal_eval(ts)
print(t1)
print(t1[0])
print('\n', 'eval')
# интерпретация строки для создания списка, НЕБЕЗОПАСНО!
t2 = eval(ts)
print(t2)
print(t2[0])
